{"ast":null,"code":"import { FILTER_BY_POPULATION, FIND_COUNTRY, GET_POST, NEXT_PAGE, PREV_PAGE, RESET, FILTER_BY_SEARCH, FILTER_BY_ALPH, FILTER_BY_CONTINENT, FILTER_BY_ACTIVITY, LAST, ALL_ACTIVITIES, DELETE_ACTIVITY } from \"../actions/types\";\nconst initialState = {\n  inputText: \"\",\n  page: 0,\n  order: 'az',\n  country: [],\n  countryToShow: [],\n  countryFiltered: [],\n  loading: false,\n  activities: []\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case FIND_COUNTRY:\n      return {\n        ...state,\n        loading: false,\n        country: payload,\n        countryToShow: payload\n      };\n    case RESET:\n      return {\n        ...state,\n        page: 0\n      };\n    case LAST:\n      return {\n        ...state,\n        page: Math.floor(state.country.length / 10) * 10\n      };\n    case NEXT_PAGE:\n      return {\n        ...state,\n        page: state.page + 10\n      };\n    case PREV_PAGE:\n      if (state.page > 0) {\n        return {\n          ...state,\n          page: state.page - 10\n        };\n      } else {\n        return {\n          ...state\n        };\n      }\n    case GET_POST:\n      return {\n        ...state,\n        loading: true\n      };\n    case FILTER_BY_SEARCH:\n      state.country = state.countryToShow;\n      state.countryFiltered = state.country.filter(p => p.nombre.includes(payload));\n      return {\n        ...state,\n        country: state.countryFiltered\n      };\n    case FILTER_BY_CONTINENT:\n      state.country = state.countryToShow;\n      state.countryFiltered = state.country.filter(p => p.continente.includes(payload));\n      return {\n        ...state,\n        country: state.countryFiltered\n      };\n    case FILTER_BY_ACTIVITY:\n      if (payload.length > 0) {\n        state.country = state.countryToShow;\n        state.countryFiltered = payload;\n      }\n      return {\n        ...state,\n        country: state.countryFiltered\n      };\n    case FILTER_BY_ALPH:\n      console.log(\"Reducer...\");\n      if (payload === 'a-z') state.country.sort((a, b) => {\n        if (a.nombre < b.nombre) return -1;\n        if (a.nombre > b.nombre) return 1;\n        return 0;\n      });\n      if (payload === 'z-a') state.country.sort((a, b) => {\n        if (a.nombre > b.nombre) return -1;\n        if (a.nombre < b.nombre) return 1;\n        return 0;\n      });\n      return {\n        ...state,\n        order: payload\n      };\n    case FILTER_BY_POPULATION:\n      if (payload === 'dec') state.country.sort((a, b) => {\n        if (a.poblacion > b.poblacion) return -1;\n        if (a.poblacion < b.poblacion) return 1;\n        return 0;\n      });\n      if (payload === 'asc') state.country.sort((a, b) => {\n        if (a.poblacion < b.poblacion) return -1;\n        if (a.poblacion > b.poblacion) return 1;\n        return 0;\n      });\n      return {\n        ...state,\n        order: payload\n      };\n    case ALL_ACTIVITIES:\n      return {\n        ...state,\n        activities: payload\n      };\n    case DELETE_ACTIVITY:\n      return {\n        ...state\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default reducer;","map":{"version":3,"names":["FILTER_BY_POPULATION","FIND_COUNTRY","GET_POST","NEXT_PAGE","PREV_PAGE","RESET","FILTER_BY_SEARCH","FILTER_BY_ALPH","FILTER_BY_CONTINENT","FILTER_BY_ACTIVITY","LAST","ALL_ACTIVITIES","DELETE_ACTIVITY","initialState","inputText","page","order","country","countryToShow","countryFiltered","loading","activities","reducer","state","type","payload","Math","floor","length","filter","p","nombre","includes","continente","console","log","sort","a","b","poblacion"],"sources":["C:/Users/chris/OneDrive/Documentos/01 - Curso - SoyHenry/PI-Front-1/src/reducer/index.js"],"sourcesContent":["import { FILTER_BY_POPULATION, FIND_COUNTRY, GET_POST, NEXT_PAGE,\r\n     PREV_PAGE, RESET, FILTER_BY_SEARCH, FILTER_BY_ALPH, FILTER_BY_CONTINENT,\r\n      FILTER_BY_ACTIVITY, LAST, ALL_ACTIVITIES, DELETE_ACTIVITY } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    inputText: \"\",\r\n    page: 0,\r\n    order: 'az',\r\n    country: [],\r\n    countryToShow: [],\r\n    countryFiltered: [],\r\n    loading: false,\r\n    activities: [],\r\n};\r\n\r\nconst reducer = (state = initialState, { type, payload }) =>{\r\n    switch(type){\r\n        case FIND_COUNTRY:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                country: payload,\r\n                countryToShow: payload\r\n            }\r\n        case RESET:\r\n            return {\r\n                ...state,\r\n                page: 0\r\n            }\r\n            case LAST:\r\n                return {\r\n                    ...state,\r\n                    page: Math.floor(state.country.length / 10) * 10\r\n                }\r\n            case NEXT_PAGE:\r\n                return {\r\n                    ...state,\r\n                    page: state.page + 10\r\n                }\r\n            case PREV_PAGE:\r\n                if (state.page > 0) {\r\n                    return {\r\n                        ...state,\r\n                        page: state.page - 10\r\n                    }\r\n                } else {\r\n                    return {\r\n                        ...state\r\n                    }\r\n                }\r\n            case GET_POST:\r\n                return {\r\n                    ...state,\r\n                    loading: true,\r\n                }\r\n            case FILTER_BY_SEARCH:\r\n                \r\n                state.country = state.countryToShow\r\n                state.countryFiltered = state.country.filter(p => p.nombre.includes(payload))\r\n                return {\r\n                    ...state,\r\n                    country: state.countryFiltered\r\n                }\r\n            case FILTER_BY_CONTINENT:\r\n                \r\n                state.country = state.countryToShow\r\n                state.countryFiltered = state.country.filter(p => p.continente.includes(payload))\r\n                return {\r\n                    ...state,\r\n                    country: state.countryFiltered\r\n                }\r\n            case FILTER_BY_ACTIVITY:\r\n                if (payload.length > 0) {\r\n                    state.country = state.countryToShow\r\n                    state.countryFiltered = payload;\r\n                }\r\n                return {\r\n                    ...state,\r\n                    country: state.countryFiltered\r\n                }\r\n            case FILTER_BY_ALPH:\r\n                console.log(\"Reducer...\");\r\n                if (payload === 'a-z')\r\n                    state.country.sort((a, b) => {\r\n                        if (a.nombre < b.nombre) return -1;\r\n                        if (a.nombre > b.nombre) return 1;\r\n                        return 0;\r\n                    })\r\n                if (payload === 'z-a')\r\n                    state.country.sort((a, b) => {\r\n                        if (a.nombre > b.nombre) return -1;\r\n                        if (a.nombre < b.nombre) return 1;\r\n                        return 0;\r\n                    })\r\n                return {\r\n                    ...state,\r\n                    order: payload,\r\n                }\r\n            case FILTER_BY_POPULATION:\r\n                if (payload === 'dec')\r\n                    state.country.sort((a, b) => {\r\n                        if (a.poblacion > b.poblacion) return -1;\r\n                        if (a.poblacion < b.poblacion) return 1;\r\n                        return 0;\r\n                    })\r\n                if (payload === 'asc')\r\n                    state.country.sort((a, b) => {\r\n                        if (a.poblacion < b.poblacion) return -1;\r\n                        if (a.poblacion > b.poblacion) return 1;\r\n                        return 0;\r\n                    })\r\n                return {\r\n                    ...state,\r\n                    order: payload\r\n                }\r\n            case ALL_ACTIVITIES:\r\n                return{\r\n                    ...state,\r\n                    activities: payload\r\n                }\r\n            case DELETE_ACTIVITY:\r\n                \r\n                return{\r\n                    ...state,\r\n                }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n\r\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}