{"ast":null,"code":"import axios from \"axios\";\nimport { FILTER_BY_POPULATION, FILTER_BY_ALPH, FILTER_BY_CONTINENT, FILTER_BY_SEARCH, FIND_COUNTRY, GET_POST, NEXT_PAGE, PREV_PAGE, RESET, FILTER_BY_ACTIVITY, LAST, ALL_ACTIVITIES, DELETE_ACTIVITY } from \"./types\";\nexport const postActivity = data => {\n  return function (dispatch) {\n    dispatch(getPost());\n    return axios.post('/activities', {\n      nombre: data.nombre,\n      dificultad: data.dificultad,\n      duracion: data.duracion,\n      temporada: data.temporada,\n      countries: data.pais\n    }).then(data => {\n      return data;\n    }).catch(error => alert(\"Activity already existing in the DB\"));\n  };\n};\n\n//     \"id\":[\"BRB\",\"CHL\",\"ARG\"]\nexport const putCountriesInActivity = data => {\n  return function (dispatch) {\n    dispatch(getPost());\n    //console.log(\"estoy en putCountriesInActivity\",data);\n    axios.put('/updatecountries/:idActivity', {\n      countries: data\n    }).then();\n  };\n};\nexport function getPost() {\n  return {\n    type: GET_POST\n  };\n}\n;\nexport function deletePost() {\n  return {\n    type: DELETE_ACTIVITY\n  };\n}\n;\nexport function findCountry(data) {\n  return {\n    type: FIND_COUNTRY,\n    payload: data\n  };\n}\n;\nexport function fetchCountry() {\n  return function (dispatch) {\n    dispatch(getPost());\n    axios.get('/countries').then(data => dispatch(findCountry(data.data)));\n  };\n}\n;\nexport function fetchActivity(name) {\n  return function (dispatch) {\n    // dispatch(getPost());\n    axios.get(`countries/activity/${name}`).then(data => dispatch(filterByActivity(data.data)));\n  };\n}\n;\nexport function allActivities() {\n  return function (dispatch) {\n    dispatch(getPost());\n    axios.get(\"/activities/\").then(data => dispatch(getAllActivities(data.data)));\n  };\n}\n;\nexport function deleteActivities(id) {\n  console.log(\"deleteActivites \", id);\n  return function () {\n    axios.delete(`/activities/${id}`).then(() => alert('Delete successful'));\n  };\n}\n;\nexport function orderCountry(orden) {\n  return {\n    type: FILTER_BY_POPULATION,\n    payload: orden\n  };\n}\n;\nexport function filterBySearch(data) {\n  return {\n    type: FILTER_BY_SEARCH,\n    payload: data\n  };\n}\n;\nexport function nextPage(page) {\n  return {\n    type: NEXT_PAGE,\n    payload: page\n  };\n}\n;\nexport function prevPage(page) {\n  return {\n    type: PREV_PAGE,\n    payload: page\n  };\n}\n;\nexport function reset() {\n  return {\n    type: RESET\n  };\n}\n;\nexport function filterByContinent(data) {\n  return {\n    type: FILTER_BY_CONTINENT,\n    payload: data\n  };\n}\n;\nexport function filterByActivity(data) {\n  return {\n    type: FILTER_BY_ACTIVITY,\n    payload: data\n  };\n}\n;\nexport function getAllActivities(data) {\n  return {\n    type: ALL_ACTIVITIES,\n    payload: data\n  };\n}\n;\nexport function deleteActivity(data) {\n  return {\n    type: DELETE_ACTIVITY,\n    payload: data\n  };\n}\n;\nexport function filterByAlph(data) {\n  console.log(\"Actions...\");\n  return {\n    type: FILTER_BY_ALPH,\n    payload: data\n  };\n}\n;\nexport function last() {\n  return {\n    type: LAST\n  };\n}\n;","map":{"version":3,"names":["axios","FILTER_BY_POPULATION","FILTER_BY_ALPH","FILTER_BY_CONTINENT","FILTER_BY_SEARCH","FIND_COUNTRY","GET_POST","NEXT_PAGE","PREV_PAGE","RESET","FILTER_BY_ACTIVITY","LAST","ALL_ACTIVITIES","DELETE_ACTIVITY","postActivity","data","dispatch","getPost","post","nombre","dificultad","duracion","temporada","countries","pais","then","catch","error","alert","putCountriesInActivity","put","type","deletePost","findCountry","payload","fetchCountry","get","fetchActivity","name","filterByActivity","allActivities","getAllActivities","deleteActivities","id","console","log","delete","orderCountry","orden","filterBySearch","nextPage","page","prevPage","reset","filterByContinent","deleteActivity","filterByAlph","last"],"sources":["C:/Users/chris/OneDrive/Documentos/01 - Curso - SoyHenry/PI-Front-1/src/actions/index.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { FILTER_BY_POPULATION, FILTER_BY_ALPH, FILTER_BY_CONTINENT,\r\n     FILTER_BY_SEARCH, FIND_COUNTRY, GET_POST,\r\n      NEXT_PAGE, PREV_PAGE, RESET, FILTER_BY_ACTIVITY, LAST, ALL_ACTIVITIES, DELETE_ACTIVITY } from \"./types\";\r\n\r\n\r\n    export const postActivity=(data) => {\r\n        return function (dispatch) {\r\n            dispatch(getPost());\r\n         return axios.post('/activities',\r\n            {\r\n                nombre: data.nombre,\r\n                dificultad:data.dificultad,\r\n                duracion :data.duracion,\r\n                temporada: data.temporada,\r\n                countries:data.pais\r\n            }).then(data=>{return data} )\r\n            .catch((error)=>alert(\"Activity already existing in the DB\"))           \r\n        }\r\n    };\r\n\r\n    //     \"id\":[\"BRB\",\"CHL\",\"ARG\"]\r\n    export const putCountriesInActivity=(data) => {\r\n        return function (dispatch) {\r\n            dispatch(getPost());\r\n            //console.log(\"estoy en putCountriesInActivity\",data);\r\n            axios.put('/updatecountries/:idActivity',\r\n            {\r\n                countries:data\r\n            }\r\n            )\r\n                .then()\r\n        }\r\n    };\r\n    \r\n    export function getPost() {\r\n        return {\r\n            type: GET_POST,\r\n        }\r\n    };\r\n\r\n    export function deletePost() {\r\n        return {\r\n            type: DELETE_ACTIVITY,\r\n        }\r\n    };\r\n\r\n    export function findCountry(data) {\r\n        return {\r\n            type: FIND_COUNTRY,\r\n            payload: data\r\n        }\r\n    };\r\n\r\n    export function fetchCountry() {\r\n        return function (dispatch) {\r\n            dispatch(getPost());\r\n            axios.get('/countries')\r\n                .then(data => dispatch(findCountry(data.data)))\r\n        }\r\n    };\r\n\r\n    export function fetchActivity(name) {\r\n            return function (dispatch) {\r\n                // dispatch(getPost());\r\n                axios.get(`countries/activity/${name}`)\r\n                    .then(data => dispatch(filterByActivity(data.data)))\r\n            }\r\n\r\n    };\r\n\r\n    export function allActivities() {\r\n        \r\n        return function (dispatch) {\r\n            dispatch(getPost());\r\n            axios.get(\"/activities/\")\r\n                .then(data => dispatch(getAllActivities(data.data)))\r\n        }\r\n    };\r\n\r\n    export function deleteActivities(id){\r\n       console.log(\"deleteActivites \", id);\r\n        return function () {\r\n            axios.delete(`/activities/${id}`)\r\n            .then(() => alert('Delete successful'));\r\n            \r\n        }\r\n    };\r\n    \r\n    export function orderCountry(orden) {\r\n        return {\r\n            type: FILTER_BY_POPULATION,\r\n            payload: orden\r\n        }\r\n    };\r\n    \r\n    export function filterBySearch(data) {\r\n        return {\r\n            type: FILTER_BY_SEARCH,\r\n            payload: data\r\n        }\r\n    };\r\n    \r\n    export function nextPage(page) {\r\n        return {\r\n            type: NEXT_PAGE,\r\n            payload: page\r\n        }\r\n    };\r\n\r\n    export function prevPage(page) {\r\n        return {\r\n            type: PREV_PAGE,\r\n            payload: page\r\n        }\r\n    };\r\n\r\n    export function reset() {\r\n        return {\r\n            type: RESET\r\n        }\r\n    };\r\n    \r\n    export function filterByContinent(data) {\r\n        \r\n        return {\r\n            type: FILTER_BY_CONTINENT,\r\n            payload: data\r\n        }\r\n    };\r\n\r\n    export function filterByActivity(data) {\r\n        return {\r\n            type: FILTER_BY_ACTIVITY,\r\n            payload: data\r\n        }\r\n    };\r\n\r\n    export function getAllActivities(data) {\r\n        return {\r\n            type: ALL_ACTIVITIES,\r\n            payload: data\r\n        }\r\n    };\r\n\r\n    export function deleteActivity(data) {\r\n      \r\n        return {\r\n            type: DELETE_ACTIVITY,\r\n            payload: data\r\n        }\r\n    };    \r\n\r\n    export function filterByAlph(data) {\r\n        console.log(\"Actions...\");\r\n        return {\r\n            type: FILTER_BY_ALPH,\r\n            payload: data\r\n        }\r\n    };\r\n    \r\n    export function last() {\r\n        return {\r\n            type: LAST\r\n        }\r\n    };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,EAAEC,cAAc,EAAEC,mBAAmB,EAC7DC,gBAAgB,EAAEC,YAAY,EAAEC,QAAQ,EACvCC,SAAS,EAAEC,SAAS,EAAEC,KAAK,EAAEC,kBAAkB,EAAEC,IAAI,EAAEC,cAAc,EAAEC,eAAe,QAAQ,SAAS;AAGzG,OAAO,MAAMC,YAAY,GAAEC,IAAI,IAAK;EAChC,OAAO,UAAUC,QAAQ,EAAE;IACvBA,QAAQ,CAACC,OAAO,EAAE,CAAC;IACtB,OAAOjB,KAAK,CAACkB,IAAI,CAAC,aAAa,EAC5B;MACIC,MAAM,EAAEJ,IAAI,CAACI,MAAM;MACnBC,UAAU,EAACL,IAAI,CAACK,UAAU;MAC1BC,QAAQ,EAAEN,IAAI,CAACM,QAAQ;MACvBC,SAAS,EAAEP,IAAI,CAACO,SAAS;MACzBC,SAAS,EAACR,IAAI,CAACS;IACnB,CAAC,CAAC,CAACC,IAAI,CAACV,IAAI,IAAE;MAAC,OAAOA,IAAI;IAAA,CAAC,CAAE,CAC5BW,KAAK,CAAEC,KAAK,IAAGC,KAAK,CAAC,qCAAqC,CAAC,CAAC;EACjE,CAAC;AACL,CAAC;;AAED;AACA,OAAO,MAAMC,sBAAsB,GAAEd,IAAI,IAAK;EAC1C,OAAO,UAAUC,QAAQ,EAAE;IACvBA,QAAQ,CAACC,OAAO,EAAE,CAAC;IACnB;IACAjB,KAAK,CAAC8B,GAAG,CAAC,8BAA8B,EACxC;MACIP,SAAS,EAACR;IACd,CAAC,CACA,CACIU,IAAI,EAAE;EACf,CAAC;AACL,CAAC;AAED,OAAO,SAASR,OAAO,GAAG;EACtB,OAAO;IACHc,IAAI,EAAEzB;EACV,CAAC;AACL;AAAC;AAED,OAAO,SAAS0B,UAAU,GAAG;EACzB,OAAO;IACHD,IAAI,EAAElB;EACV,CAAC;AACL;AAAC;AAED,OAAO,SAASoB,WAAW,CAAClB,IAAI,EAAE;EAC9B,OAAO;IACHgB,IAAI,EAAE1B,YAAY;IAClB6B,OAAO,EAAEnB;EACb,CAAC;AACL;AAAC;AAED,OAAO,SAASoB,YAAY,GAAG;EAC3B,OAAO,UAAUnB,QAAQ,EAAE;IACvBA,QAAQ,CAACC,OAAO,EAAE,CAAC;IACnBjB,KAAK,CAACoC,GAAG,CAAC,YAAY,CAAC,CAClBX,IAAI,CAACV,IAAI,IAAIC,QAAQ,CAACiB,WAAW,CAAClB,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;EACvD,CAAC;AACL;AAAC;AAED,OAAO,SAASsB,aAAa,CAACC,IAAI,EAAE;EAC5B,OAAO,UAAUtB,QAAQ,EAAE;IACvB;IACAhB,KAAK,CAACoC,GAAG,CAAE,sBAAqBE,IAAK,EAAC,CAAC,CAClCb,IAAI,CAACV,IAAI,IAAIC,QAAQ,CAACuB,gBAAgB,CAACxB,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;EAC5D,CAAC;AAET;AAAC;AAED,OAAO,SAASyB,aAAa,GAAG;EAE5B,OAAO,UAAUxB,QAAQ,EAAE;IACvBA,QAAQ,CAACC,OAAO,EAAE,CAAC;IACnBjB,KAAK,CAACoC,GAAG,CAAC,cAAc,CAAC,CACpBX,IAAI,CAACV,IAAI,IAAIC,QAAQ,CAACyB,gBAAgB,CAAC1B,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;EAC5D,CAAC;AACL;AAAC;AAED,OAAO,SAAS2B,gBAAgB,CAACC,EAAE,EAAC;EACjCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,EAAE,CAAC;EAClC,OAAO,YAAY;IACf3C,KAAK,CAAC8C,MAAM,CAAE,eAAcH,EAAG,EAAC,CAAC,CAChClB,IAAI,CAAC,MAAMG,KAAK,CAAC,mBAAmB,CAAC,CAAC;EAE3C,CAAC;AACL;AAAC;AAED,OAAO,SAASmB,YAAY,CAACC,KAAK,EAAE;EAChC,OAAO;IACHjB,IAAI,EAAE9B,oBAAoB;IAC1BiC,OAAO,EAAEc;EACb,CAAC;AACL;AAAC;AAED,OAAO,SAASC,cAAc,CAAClC,IAAI,EAAE;EACjC,OAAO;IACHgB,IAAI,EAAE3B,gBAAgB;IACtB8B,OAAO,EAAEnB;EACb,CAAC;AACL;AAAC;AAED,OAAO,SAASmC,QAAQ,CAACC,IAAI,EAAE;EAC3B,OAAO;IACHpB,IAAI,EAAExB,SAAS;IACf2B,OAAO,EAAEiB;EACb,CAAC;AACL;AAAC;AAED,OAAO,SAASC,QAAQ,CAACD,IAAI,EAAE;EAC3B,OAAO;IACHpB,IAAI,EAAEvB,SAAS;IACf0B,OAAO,EAAEiB;EACb,CAAC;AACL;AAAC;AAED,OAAO,SAASE,KAAK,GAAG;EACpB,OAAO;IACHtB,IAAI,EAAEtB;EACV,CAAC;AACL;AAAC;AAED,OAAO,SAAS6C,iBAAiB,CAACvC,IAAI,EAAE;EAEpC,OAAO;IACHgB,IAAI,EAAE5B,mBAAmB;IACzB+B,OAAO,EAAEnB;EACb,CAAC;AACL;AAAC;AAED,OAAO,SAASwB,gBAAgB,CAACxB,IAAI,EAAE;EACnC,OAAO;IACHgB,IAAI,EAAErB,kBAAkB;IACxBwB,OAAO,EAAEnB;EACb,CAAC;AACL;AAAC;AAED,OAAO,SAAS0B,gBAAgB,CAAC1B,IAAI,EAAE;EACnC,OAAO;IACHgB,IAAI,EAAEnB,cAAc;IACpBsB,OAAO,EAAEnB;EACb,CAAC;AACL;AAAC;AAED,OAAO,SAASwC,cAAc,CAACxC,IAAI,EAAE;EAEjC,OAAO;IACHgB,IAAI,EAAElB,eAAe;IACrBqB,OAAO,EAAEnB;EACb,CAAC;AACL;AAAC;AAED,OAAO,SAASyC,YAAY,CAACzC,IAAI,EAAE;EAC/B6B,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EACzB,OAAO;IACHd,IAAI,EAAE7B,cAAc;IACpBgC,OAAO,EAAEnB;EACb,CAAC;AACL;AAAC;AAED,OAAO,SAAS0C,IAAI,GAAG;EACnB,OAAO;IACH1B,IAAI,EAAEpB;EACV,CAAC;AACL;AAAC"},"metadata":{},"sourceType":"module"}